name: Build Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        sudo apt-get install -y \
          libavcodec-dev \
          libavformat-dev \
          libavutil-dev \
          libavfilter-dev \
          libswscale-dev \
          libpostproc-dev \
          libswresample-dev \
          libx264-dev \
          libfdk-aac-dev \
          libbz2-dev \
          zlib1g-dev

    - name: Build Release
      run: |
        cd src
        chmod +x Buildit
        # 将构建输出保存到日志文件
        ./Buildit Release 2>&1 | tee build.log
        
    - name: Debug build outputs
      run: |
        echo "=== Directory structure ==="
        find . -type d
        
        echo "=== Build outputs ==="
        find . -name "*.so" -o -name "*.a"
        
        echo "=== Build directories ==="
        find . -type d -name "build" -o -name "dist"

    - name: Collect artifacts
      run: |
        echo "Creating artifacts directory..."
        mkdir -p artifacts/lib
        mkdir -p artifacts/include
        mkdir -p artifacts/logs
        
        # 复制构建日志
        if [ -f src/build.log ]; then
          cp src/build.log artifacts/logs/
        fi
        
        # 复制编译产物
        find . -name "*.so" -exec cp -v {} artifacts/lib/ \;
        find . -name "*.a" -exec cp -v {} artifacts/lib/ \;
        find . -name "*.h" -exec cp -v {} artifacts/include/ \;
        
        echo "=== Artifacts contents ==="
        ls -R artifacts/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-outputs
        path: artifacts/
